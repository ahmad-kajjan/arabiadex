{"version":3,"sources":["components/form-input/form-input.components.jsx","components/custom-button/custom-button.components.jsx","service/ApiService.js","pages/Login/Login.components.jsx","pages/homePage/homePage.components.jsx","components/header/header.components.jsx","App.js","redux/user/user-reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["FormInput","handelchange","label","otherProps","className","value","length","onChange","CustomButton","children","forsell","takeAction","action","datavalue","a","rpc","JsonRpc","fetch","signatureProvider","JsSignatureProvider","api","Api","textDecoder","TextDecoder","textEncoder","TextEncoder","transact","actions","account","name","authorization","actor","from","permission","data","quantity","blocksBehind","expireSeconds","resultWithConfig","console","log","RpcError","JSON","stringify","json","res","get_currency_balance","symbol","privatekey","parent","auth","user","get_table_rows","code","scope","table","lower_bound","limit","reverse","show_payer","ApiService","getAccountCurrency","findAccount","setPermission","Login","props","handelSubmit","event","preventDefault","state","login","then","ans","rows","addPermission","accountCurrency","catch","e","handelChange","target","setState","this","required","type","onClick","React","Component","HomePage","Header","to","src","alt","App","exact","path","component","INITAL_STATE","currentUser","currencyBalance","userReducer","payload","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cbc0244.chunk.js","sourcesContent":["import React from 'react';\nimport './form-input.styles.scss';\nconst FormInput = ({handelchange,label,...otherProps}) =>(\n        <div className=\"group\">\n            {\n                label ?\n                (<label className={`${otherProps.value.length ? 'shrink' : '' } form-input-label`} >\n                {label}\n                <br/>\n                    </label> \n                    )\n                :null \n            }\n            <input className='form-input' onChange={handelchange} {...otherProps}/>\n        </div> \n    );\n\n\nexport default FormInput; ","import React from 'react';\nimport './custom-button.styles.scss';\nconst CustomButton=({children,forsell,...otherProps}) =>(\n    <button className=\"custom-button\"  {...otherProps }>\n        {children }\n    </button>\n);\n\nexport default CustomButton;","import {Api,JsonRpc,RpcError} from 'eosjs';\nimport {JsSignatureProvider} from 'eosjs/dist/eosjs-jssig';\nasync function takeAction (action,datavalue)\n{\n    const privatekey=\"5JTnHdR2g8K8eizSeVdLYV4jEMZZv5FqZraSuFXLxH1b8efTR5b\";\n    const rpc=new JsonRpc('http://jungle2.cryptolions.io:80',{fetch});\n    const signatureProvider=new JsSignatureProvider([privatekey]);\n    const api=new Api({rpc,signatureProvider,textDecoder :new TextDecoder(),textEncoder:new TextEncoder()});\n    try{\n        const resultWithConfig = await api.transact({\n           actions:[{ \n                account:\"jungledex151\",\n                name:action,\n                authorization: [{\n                    actor:datavalue.from,\n                     permission:'active',\n                    }],\n                    data:{from:datavalue.from,quantity:datavalue.quantity},\n            }]},\n            {\n                blocksBehind:3,\n                expireSeconds:30,\n            });\n            console.log(resultWithConfig);\n    }\n    catch(e){\n        console.log('\\nCaught exception: ' + e);\n        if (e instanceof RpcError)\n        console.log(JSON.stringify(e.json, null, 2));\n    }\n}\n\nasync function getAccountCurrency(datavalue)\n    {\n        console.log(\"currency\"+datavalue);\n        const rpc=new JsonRpc('http://jungle2.cryptolions.io:80',{fetch});\n        try{\n            const res=rpc.get_currency_balance(\"eosio.token\",datavalue.from,datavalue.symbol)\n            return res;\n        }\n        catch(e){\n            console.log('\\nCaught exception: ' + e);\n            if (e instanceof RpcError)\n            console.log(JSON.stringify(e.json, null, 2));\n        }\n    }\n\nasync function setPermission(datavalue)\n{\n    console.log(\"Permission data\"+datavalue);\n    const privatekey=datavalue.privatekey;   \n    const rpc=new JsonRpc('http://jungle2.cryptolions.io:80',{fetch});\n    const signatureProvider=new JsSignatureProvider([privatekey]);\n    const api=new Api({rpc,signatureProvider,textDecoder :new TextDecoder(),textEncoder:new TextEncoder()});\n    try{\n        const res= await api.transact({\n            actions: [{\n                account: 'eosio',\n                name: 'updateauth',\n                authorization: [{\n                    actor: datavalue.from, \n                    permission: 'active',\n                }],\n                data: {\n                    account: datavalue.from,  \n                    permission: \"active\",\n                    parent: 'owner',\n                    auth: {\n                        \"threshold\": 1,\n                        \"keys\": [{\n                            \"key\": \"EOS5ZE9hYW9CFqkA99eLeDXLQKxxdpPLfdi2Ps4YpHbKFczcc4QKk\",\n                            \"weight\": 1\n                        }],\n                        \"accounts\": [{\n                            \"permission\": {\n                                \"actor\": \"jungledex151\",\n                                \"permission\": \"eosio.code\"\n                            },\n                            \"weight\": 1\n                        }],\n                        \"waits\":\"\",\n                    }\n                }\n            }]\n        }, {\n            blocksBehind: 3,\n            expireSeconds: 30,\n        });\n        console.log(res);\n        try{\n            const resault=await api.transact({\n                actions:[{ \n                    account:\"jungledex151\",\n                    name:'signin',\n                    authorization: [{\n                        actor:datavalue.from,\n                         permission:'active',\n                        }],\n                        data:{user:datavalue.from},\n                }]},\n                {\n                    blocksBehind:3,\n                    expireSeconds:30,\n            });\n        }\n        catch(e){\n            console.log('\\nCaught exception: ' + e);\n            if (e instanceof RpcError)\n            console.log(JSON.stringify(e.json, null, 2));\n        }\n    }\n    catch(e){\n        console.log('\\nCaught exception: ' + e);\n        if (e instanceof RpcError)\n        console.log(JSON.stringify(e.json, null, 2));\n    }\n}\nasync function findAccount(user)\n{\n    console.log(\"findAccount func\"+user);\n    const rpc=new JsonRpc('http://jungle2.cryptolions.io:80',{fetch});\n        try{\n            const res=rpc.get_table_rows({\n                                        json:true,\n                                        code:\"jungledex151\",\n                                        scope:\"jungledex151\",\n                                        table:\"accounttable\",\n                                        lower_bound:user,\n                                        limit:1,\n                                        reverse:false,\n                                        show_payer:false});\n            return res;\n        }\n        catch(e){\n            console.log('\\nCaught exception: ' + e);\n            if (e instanceof RpcError)\n            console.log(JSON.stringify(e.json, null, 2));\n        }\n}\n\nclass ApiService{\n    static buy({from,quantity})\n    {   \n       takeAction(\"buy\",{from:from,quantity:quantity});                        \n    }\n\n    static sell({from,quantity})\n    {   \n        takeAction(\"sell\",{from:from,quantity:quantity});                    \n    }\n  \n    static  accountCurrency({from:from})\n    {\n        return getAccountCurrency({from:from});\n    }\n\n    static login({from:from})\n    {\n        return findAccount(from);\n       \n    }\n    \n    static addPermission({from,privatekey}){\n        setPermission({from,privatekey});\n    }\n}\n\nexport default ApiService;","import React from 'react';\nimport FormInput from '../../components/form-input/form-input.components';\nimport CustomButton from '../../components/custom-button/custom-button.components';\nimport ApiService from '../../service/ApiService';\nimport {connect} from 'react-redux';\nimport {setCurrentUser} from '../../redux/user/user.actions';\nimport './Login.styles.scss';\n\n\n\nclass  Login extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n              from  : '',\n              privatekey : '',\n        }\n    }\n    handelSubmit = event => {\n        event.preventDefault();\n        const {from,privatekey} =this.state;\n        ApiService.login({from:from}).then(ans =>{\n            console.log(ans);\n            // eslint-disable-next-line\n        if( ans.rows[0].user!==from){\n                ApiService.addPermission({from:from,privatekey:privatekey});}\n                const test=ApiService.accountCurrency({from:from});\n                test.then(user=>{\n                    console.log(user);\n                });\n               \n            }).catch((e)=>{\n            console.log('\\nCaught exception: ' + e);\n            \n        });\n    }\n\n    handelChange = event => {\n        const {value,name} =event.target;\n        this.setState({[name]:value});\n    }\n    render()\n    {\n        return(\n            <div className=\"Login\" >\n                <h2>USE  your jungle testnet account </h2>\n                <form >\n                     <FormInput name=\"from\"  value={this.state.from} handelchange={this.handelChange} label={\"account_name\"} required />\n                     <FormInput name=\"privatekey\"  value={this.state.privatekey} handelchange={this.handelChange} label={\"Enter your private Key \"} required />\n                    <div className =\"buttons\">\n                        <CustomButton type='button' name=\"setPermission\" onClick={this.handelSubmit}>Login</CustomButton>\n                    </div>\n                </form>\n                <div className='userInfo'>\n                        <h3 name='name'></h3>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default (Login); ","import React from 'react';\n\nimport './homePage.styles.scss';\n\nconst HomePage =()=>(\n    <div className='homepage'>\n        <h1>\n            Hello to frist program to test it \n        </h1>\n    </div>\n)\n\nexport default HomePage;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './header.styles.scss';\nconst Header=()=> \n(\n    <div className =\"header\">\n        <Link className='icon-container' to='/'>\n            <img src =\"https://media.caramel.la/_CdWCc2Nz?e=0,0,340,587&r=80\"  alt=\"icon\" className='icon' />\n        </Link>\n        <div className=\"options\">\n            <Link className='option' to='/login'>\n                Login\n            </Link>\n            <Link className='option' to='/contact'>\n                Contact\n            </Link>\n \n        </div>\n    </div>\n)\nexport default Header;","import React from 'react';\nimport './App.css';\nimport Login from './pages/Login/Login.components';\nimport HomePage from './pages/homePage/homePage.components';\nimport Header from './components/header/header.components';\nimport { Route } from 'react-router-dom';\nfunction App() {\n  return (\n    <div className='App'>\n      <Header />\n      <div className='mainpage'>\n        <Route exact path='/arabiadex' component={HomePage} />\n        <Route exact path='/' component={HomePage}/>\n        <Route exact path='/login' component={Login}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const INITAL_STATE = {\n    currentUser:null,\n    currencyBalance:null\n}\nconst userReducer = (state=INITAL_STATE,action) =>{\n    switch (action.type) {\n        case 'value':\n            case 'SET_CURRENT_USER':\n                return {\n                    ...state,\n                    currentUser:action.payload\n                }\n    \n        default:\n            return state;\n    }\n}\n\nexport default userReducer;","import {combineReducers} from 'redux';\nimport userReducer from './user/user-reducer';\n\nexport default combineReducers(\n    {\n        user:userReducer\n    }\n);","import {createStore,applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [logger];\nconst store = createStore(rootReducer,applyMiddleware(...middlewares));\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}